#!/usr/bin/perl
use strict;
use Getopt::Long qw(GetOptions);
use Pod::Usage qw(pod2usage);
use lib './';
use MediaIndex;
use MediaCopy;
use MediaHelper;
use File::Path qw(make_path);

my $man = 0;
my $help = 0;
my $source;
my $target;
my $index;
my $copy;
my $clean;

## Parse options and print usage if there is a syntax error,
## or if usage was explicitly requested.
GetOptions('help|?' => \$help,
           "source=s" => \$source,
           "target=s" => \$target,
           'index'  => \$index,
           'copy'   => \$copy,
           'clean'  => \$clean
) or pod2usage(2);
pod2usage(1) if $help;

if($clean) {
    if (MediaHelper::prompt_yn("Erase media.idx?")) {
        system("rm media.idx");
        system("rm skipped.idx");
    }
    exit;
}

# must specify an action - copy, index or both
pod2usage(2) if (!(defined $index || defined $copy));

my $ret = 1; # success
if($index) {
    print "Indexing\n";
    if (-e "media.idx" && !MediaHelper::prompt_yn("Overwrite media.idx?")) {
        exit;
    }

    $ret = MediaIndex::index_media($source, $target);
}

if($copy) {
    print "Sorting\n";

    # should we continue even if some files weren't indexed?
    if($ret == 0 && !MediaHelper::prompt_yn("Some files were not indexed. Continue with copy?")) {
        exit;
    }
    
    if (-e $target and -d $target and !MediaHelper::prompt_yn("$target exists. Overwrite?")) {
        exit;
    }

    # create target dir if it doesn't exist
    if (!(-e $target and -d $target)) {
        # directory doesn't exist, create it
        eval { make_path($target) };
	if ($@) {
            print "Couldn't create $target: $@";
            return;
	}
    }
    MediaCopy::copy_media();
}


## If no arguments were given, then allow STDIN to be used only
## if it's not connected to a terminal (otherwise print usage)
#pod2usage("$0: No files given.")  if ((@ARGV == 0) && (-t STDIN));

__END__

=head1 NAME

util - Using GetOpt::Long and Pod::Usage

=head1 SYNOPSIS

util [options]

 Options:
   --help           brief help message

   --source         source dir where media files are present

   --target         target dir where indexed medial files should be copied to

   --index          Index media files recursively in subdirectories below source folder
                    Extracts timestamp from each file, use the timestamp to generate 
                    target directory name where the file should be placed. 
                    indexing results are generated in 'media.idx'. Each row in this file
                    specifies source and target media file names.

   --copy           Copy indexed files in media.idx to target directory
                    if files weren't indexed, return immediately

   --clean          Clean media.idx and do nothing

=head1 OPTIONS

=over 4

=item B<-help>

Print a brief help message and exits.

=head1 DESCRIPTION

B<This program> will read the given input file(s) and do something
useful with the contents thereof.

=cut
